# Configuration for DIY MMU2S based on SKR-MINI
# Jeremy Briffaut kakou@kakou.org
# More info : https://www.thingiverse.com/thing:3910546
#
#
# config inspired from https://github.com/mwr666/klipper/blob/sunbeam2.0c_multi_mcu_mmu2/config/printer-protodev-corexy-multi-mcu-mmu2.cfg


########################################
#
# Configuration for a SKR MINI board with 3 TMC2208 UART
# and 2 1.7A stepper motor at 1/16
# current for a 24V power
#
########################################
[mcu mmboard]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_33FFD8054E48363008771743-if00

[respond]
default_type: command

########################################
# E0 : MMU2S 5mm road with the 5 gears
[tmc2208 manual_stepper gear_stepper]
uart_pin: mmboard:PC14
microsteps: 16
run_current: 1.000
hold_current: 0.600
interpolate: True
sense_resistor: 0.110
#stealthchop_threshold: 200

[manual_stepper gear_stepper]
step_pin: mmboard:PC5
dir_pin: !mmboard:PB0
enable_pin: !mmboard:PC4
# 140 : mk8 gear
#step_distance: .007142
# 165 : fystec gear for mmu2s
step_distance: .00606
velocity: 40
accel: 1500 # same value that your printer accel
endstop_pin: ^mmboard:PC2 # PINDA X-

########################################
# Y : MMU2S idler with the 5 ball bearings
[tmc2209 manual_stepper idler_stepper]
uart_pin: mmboard:PB7
microsteps: 16
run_current: 0.800
hold_current: 0.800
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 100
# comment this two line if you don't use sensorless
diag_pin: ^mmboard:PA1 # Y+
driver_SGTHRS: 75

[manual_stepper idler_stepper]
step_pin: mmboard:PB13
dir_pin: mmboard:PB14
enable_pin: !mmboard:PB12
# 25 step/mm
step_distance: .04
velocity: 100
accel: 500
# comment this two line if you don't use sensorless
endstop_pin: tmc2209_idler_stepper:virtual_endstop
homing_retract_dist: 0

########################################
# X : MMU2S color selector
[tmc2209 manual_stepper selector_stepper]
uart_pin: mmboard:PC12
microsteps: 16
run_current: 1.000
hold_current: 0.400
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 250
# comment this two line if you don't use sensorless
diag_pin: ^mmboard:PA2 # X+
driver_SGTHRS: 150

[manual_stepper selector_stepper]
step_pin: mmboard:PC6
dir_pin: mmboard:PC7
enable_pin: !mmboard:PB15
# 80 step/mm
step_distance: .0025
velocity: 35
accel: 500
# uncomment this two line if you don't use sensorless
#endstop_pin: !mmboard:PA2 # switch endstop on the left for selector X+
# comment this two line if you don't use sensorless
endstop_pin: tmc2209_selector_stepper:virtual_endstop
homing_retract_dist: 0

## IR extruder switch
[filament_switch_sensor ir_sensor]
pause_on_runout: False
switch_pin: ^P1.28 # P1.28 for X-max on printer board
event_delay:0.1
runout_gcode:
    M117 Filament not in extruder
insert_gcode:
    M117 Filament in extruder

## IR splitter switch
#[filament_switch_sensor splitter_sensor]
#pause_on_runout: False
#switch_pin: ^mmboard:PC3 # P1.28 for X-max on printer board
#event_delay:0.1
#runout_gcode:
#    M117 Filament not in splitter
#insert_gcode:
#    M117 Filament in splitter

###############################################

[mcu sensorboard]
serial: /dev/ttyUSB0
pin_map: arduino

[filament_length_sensor l1]
spi_speed: 4000000
#   The SPI speed (in hz) to use when communicating with the chip.
#   The default is 4000000.
spi_bus: spi
#spi_speed: 1000000
#spi_software_sclk_pin: mmboard:PB3
#spi_software_mosi_pin: mmboard:PB5
# spi_software_miso_pin: mmboard:PB4
#   These optional parameters allow one to customize the SPI settings
#   used to communicate with the chip.
sensor_pin: sensorboard:ar10
#   The chip select line for the sensor chip. This parameter must be
#   provided.
#   118 pulse per rotation, mk8 circumference 21mm
#   pulse_length = 118/21
#   118 pulse per rotation, delrin wheel circumference 50
#   pulse_length = 118/50
pulse_length: 2.5
enable: False
#   Sensor enabled or disabled after power on. The default is to
#   disable.
max_mm_difference: 2.1
max_mm_difference2: 10.0
nb_error_needed: 3
nb_value_ignore_at_start: 5
extruder: extruder
#See [filament_switch_sensor] for a description of these parameters.
pause_on_runout: False
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#    M118 jamming/runout detected
#    PAUSE_MMU
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode.  It may be useful to
#   increase this delay if Octoprint exhibits strange pause behavior.
#   Default is 0.5 seconds.


# Display the last queried status
[gcode_macro FIL_STATUS]
gcode:
    M118 pulse: {printer["filament_length_sensor l1"].pulse}
    M118 length: {printer["filament_length_sensor l1"].length}
    M118 extruder_step: {printer["filament_length_sensor l1"].extruder_step}
    M118 extruder_position: {printer["filament_length_sensor l1"].extruder_position}
    M118 is_active: {printer["filament_length_sensor l1"].is_active}




